{
  "openapi": "3.0.1",
  "info": {
    "title": "Books Collection API",
    "description": "This is a CRUD API for managing a 'Books' collection.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/books": {
      "post": {
        "summary": "Create a new book",
        "description": "Creates a new book in the collection.",
        "tags": ["Books"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "summary": "Get all books",
        "description": "Retrieves a list of all books in the collection.",
        "tags": ["Books"],
        "responses": {
          "200": {
            "description": "A list of books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No books found"
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "summary": "Get a single book",
        "description": "Retrieves the details of a single book by ID.",
        "tags": ["Books"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the book to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "A single book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "put": {
        "summary": "Update a book",
        "description": "Updates the details of a book by ID.",
        "tags": ["Books"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the book to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a book",
        "description": "Deletes a book by ID.",
        "tags": ["Books"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the book to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted successfully"
          },
          "404": {
            "description": "Book not found"
          }
        }
      }
    },
    "/books/cover-image/{id}": {
      "patch": {
        "summary": "Update book cover picture",
        "description": "Updates the cover picture of a book by ID.",
        "tags": ["Books"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the book to update cover picture"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "coverImage": {
                    "type": "string",
                    "format": "binary",
                    "description": "The cover image file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cover image updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Book not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60c72b2f9b1e8b6c6d8a87d4"
          },
          "title": {
            "type": "string",
            "example": "Book Title"
          },
          "author": {
            "type": "string",
            "example": "Book Author"
          },
          "published_date": {
            "type": "string",
            "format": "date",
            "example": "2023-01-01"
          },
          "isbn": {
            "type": "string",
            "example": "123-456-789"
          },
          "coverImage": {
            "type": "string",
            "example": "path_to_uploaded_image"
          }
        }
      },
      "BookInput": {
        "type": "object",
        "required": ["title", "author", "published_date", "isbn"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Book Title"
          },
          "author": {
            "type": "string",
            "example": "Book Author"
          },
          "published_date": {
            "type": "string",
            "format": "date",
            "example": "2023-01-01"
          },
          "isbn": {
            "type": "string",
            "example": "123-456-789"
          }
        }
      }
    }
  }
}
